import test;

export function test_destructuring_array_assignment() {
    let a = 1, [b, c] = [2, 3], d = 4;

    test::assert(a == 1);
    test::assert(b == 2);
    test::assert(c == 3);
    test::assert(d == 4);
}

export function test_destructuring_struct_assignment() {
    struct test { b, c }

    let a = 1, { b, c: d } = test { b=2, c=3 }, c = 4;

    test::assert(a == 1);
    test::assert(b == 2);
    test::assert(d == 3);
    test::assert(c == 4);
}

export function test_param_destructuring() {
    function thetest([k, v], { a, b }, c) {
        return [k, v, a, b, c];
    }

    let [a, b, c, d, e] = thetest([1, 2], struct { a=3, b=4 }, 5);
    test::assert(a == 1);
    test::assert(b == 2);
    test::assert(c == 3);
    test::assert(d == 4);
    test::assert(e == 5);
}

export function test_destructuring_array_assignment_expression() {
    let a, b, c;

    [a, b, c] = [1, 2, 3];
    test::assert(a == 1);
    test::assert(b == 2);
    test::assert(c == 3);
}

export function test_destructuring_struct_assignment_expression() {
    let d, e, f;

    { d, e, f } = struct {
        d = 1, e = 2, f = 3,
    };

    test::assert(d == 1);
    test::assert(e == 2);
    test::assert(f == 3);
}