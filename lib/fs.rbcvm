import arraylist;
import errno;
import fn;
import string;
import sys;

import _fs;

let BLOCK_SIZE = 4096;

function perror(msg) {
	sys.panic(string_concat(msg, ": ", errno.strerror(errno.get())));
}

export function read_file(name) {
	let f = _fs.fopen(name, "rb");
	if (f == null) {
		perror("read_file");
	}
	let bufs = arraylist.new();
	let buf;
	let nread;

	while (!_fs.feof(f)) {
		arraylist.push(bufs, (buf = string.buf(4096)));
		nread = _fs.fread(buf, BLOCK_SIZE, f);
		if (nread != BLOCK_SIZE) {
			if (_fs.ferror(f)) {
				perror("read_file");
			}
			string.resize_buf(buf, nread);
		}
	}

	return fn.apply(string_concat, arraylist.to_array(bufs));
}

export function directory_entries(path) {
	let dirp = _fs.opendir(path);
	if (dirp == null) {
		perror("directory_entries");
	}

	return function next() {
		errno.set(0);
		let ent = _fs.readdir(dirp);
		if (ent == null) {
			if (errno.get()) {
				perror("directory_entries");
			}
			_fs.closedir(dirp);
			dirp = null;
			return null;
		} else if (ent == "." || ent == "..") {
			return next();
		}
		return ent;
	};
}