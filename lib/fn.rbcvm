import array;

export function identity(n) {
    return n;
}

export function flip(f) {
    return function(a, b) {
        return f(b, a);
    };
}

export function curry(fn, a) {
    return function(b) {
        return fn(a, b);
    };
}

export function partial(fn, args) {
    return array.foldl(args, fn, function(acc, i) {
        return curry(acc, i);
    });
}

export function compose(functions) {
    return array.foldl1(functions, function(acc, fn) {
        return function(arg) {
            return acc(fn(arg));
        };
    });
}

export let chain = compose([compose, array.reversed]);

export function bind(fn, slf) {
    return function() {
        let args = arguments();
        let args_len = array.length(args);
        let all_args = array.new(args_len + 1);
        all_args[0] = slf;
        for (let i = 0; i < args_len; i = i + 1) {
            all_args[i + 1] = args[i];
        }
        return apply(fn, all_args);
    };
}
